tab "General" do
  f.inputs "Core" do
    f.solution_property :name

    f.solution_property :founded_on

    f.solution_property :country_code

    f.solution_property :member_count

    f.solution_property :staffing_full_time

    f.solution_property :staffing_volunteer

    f.solution_property :maintenance_status
  end
end

tab "Filters" do
  f.inputs "Controlled Vocabularies" do
    f.solution_property :scoss

    f.solution_property(:solution_categories)

    SolutionProperty.has_many_associations.without(:solution_categories, :web_accessibility_applicabilities).each do |option|
      f.solution_property(option)
    end

    SolutionProperty.has_one_associations.without(:maintenance_status, :staffing_full_time, :staffing_volunteer).each do |option|
      f.solution_property(option)
    end
  end
end

tab "Assets" do
  f.inputs "Logo" do
    li do
      if f.object.solution_kind == :draft
        attributes_table_for f.object do
          row :current do
            if f.object.solution.logo_attacher.stored?
              image_tag f.object.solution.logo(:small).url
            else
              status_tag "unset"
            end
          end

          row :draft_logo do
            if f.object.pending_logo_change?
              if f.object.logo_attacher.stored?
                image_tag f.object.logo(:small).url
              else
                status_tag "will remove when approved"
              end
            else
              status_tag "unchanged from current"
            end
          end
        end
      else
        attributes_table_for f.object do
          row :current do
            if f.object.logo_attacher.stored?
              image_tag f.object.logo(:small).url
            else
              status_tag "unset"
            end
          end

          row :original_filename do
            if f.object.logo_attacher.stored?
              f.object.logo.original_filename
            else
              status_tag "unset"
            end
          end

          row :original_size do
            if f.object.logo_attacher.stored?
              number_to_human_size f.object.logo.size
            else
              status_tag "unset"
            end
          end
        end
      end
    end

    f.record_property_access!(:logo)

    f.input :logo, as: :file, input_html: { accept: ImageUploader::ACCEPT }
  end
end

tab "Info" do
  f.inputs "Contact & Web Presence" do
    f.solution_property :first_name
    f.solution_property :last_name
    f.solution_property :email
    f.solution_property :contact
    f.solution_property :website
    f.solution_property :board_members_url
    f.solution_property :membership_program_url
    f.solution_property :research_organization_registry_url
  end

  f.inputs "Finances" do
    f.solution_property :currency

    SolutionProperty.currency_values.each do |attr|
      f.solution_property attr
    end

    f.solution_property :financial_numbers_publishability
    f.solution_property :financial_numbers_documented_url
    f.solution_property :financial_date_range
    f.solution_property :shareholders
  end

  f.inputs "Blurbs" do
    SolutionProperty.blurb_values.each do |blurb|
      f.solution_property blurb
    end
  end
end

tab "Lists" do
  f.store_model_list_property :service_providers do |spf|
    spf.input :name, as: :string, required: true
    spf.input :url, as: :url, required: true
    spf.input :description, as: :text, required: false, input_html: { rows: 2 }
  end

  f.store_model_list_property :current_affiliations do |caf|
    caf.input :name, as: :string, required: true
    caf.input :url, as: :url, required: true
    caf.input :description, as: :text, required: false, input_html: { rows: 2 }
  end

  f.store_model_list_property :founding_institutions do |fif|
    fif.input :name, as: :string, required: true
    fif.input :url, as: :url, required: true
    fif.input :description, as: :text, required: false, input_html: { rows: 2 }
  end

  f.store_model_list_property :recent_grants do |rgf|
    rgf.input :name, as: :string, required: false
    rgf.input :starts_on, as: :datepicker, required: false
    rgf.input :ends_on, as: :datepicker, required: false
    rgf.input :display_date, as: :string, required: false
    rgf.input :funder, as: :string, required: false
    rgf.input :amount, as: :string, required: false
    rgf.input :grant_activities, as: :string, required: false
    rgf.input :award_announcement_url, as: :url, required: false
    rgf.input :notes, as: :string, required: false
  end

  f.store_model_list_property :top_granting_institutions do |tgif|
    tgif.input :name, as: :string, required: true
    tgif.input :url, as: :url, required: true
    tgif.input :description, as: :text, required: false, input_html: { rows: 2 }
  end
end

tab "Implementations" do
  Implementation.each do |impl|
    if impl.web_accessibility?
      f.solution_implementation impl.name do |waf|
        #waf.record_property_access! :web_accessibility_applicabilities

        waf.input :applies_to_solution, as: :boolean
        waf.input :applies_to_website, as: :boolean
      end

      inputs do
        f.solution_property :web_accessibility_applicabilities
      end
    else
      f.solution_implementation impl.name
    end
  end
end
