version: "3.9"
services:
  db:
    image: "postgres:15.5-alpine"
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all
    shm_size: 2g
    environment:
      POSTGRES_PASSWORD: password
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: bitnami/redis:6.2.7-debian-10-r34
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
  test-redis:
    image: bitnami/redis:6.2.7-debian-10-r34
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
  web:
    tty: true
    stdin_open: true
    build: .
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    env_file: docker/compose.env
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - bundle_cache:/bundle
      - node_cache:/srv/app/node_modules
      - infra-finder-sync:/srv/app:nocopy
    ports:
      - "6856:6333"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "-s", "-o", "/dev/null", "http://localhost:6333/up"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 15s
  worker:
    build: .
    command: bin/good_job start --probe-port 7001
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    env_file: docker/compose.env
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - bundle_cache:/bundle
      - node_cache:/srv/app/node_modules
      - infra-finder-sync:/srv/app:nocopy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "-s", "-o", "/dev/null", "http://localhost:7001/status/started"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 15s
  assets:
    build: .
    command: yarn dev:watch
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    env_file: docker/compose.env
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - bundle_cache:/bundle
      - node_cache:/srv/app/node_modules
      - infra-finder-sync:/srv/app:nocopy
    restart: unless-stopped
    stdin_open: true
  spec:
    build: .
    command: tail -f /dev/null
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
      test-redis:
        condition: service_healthy
    env_file:
      - docker/compose.env
    environment:
      - RACK_ENV=test
      - RAILS_ENV=test
      - REDIS_URL=redis://test-redis:6379
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - bundle_cache:/bundle
      - node_cache:/srv/app/node_modules
      - infra-finder-sync:/srv/app:nocopy
    restart: unless-stopped
  mailcatcher:
    image: "sj26/mailcatcher:v0.8.2"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    ports:
      - "6857:1080"
    restart: unless-stopped
  minio:
    image: "minio/minio:RELEASE.2022-09-25T15-44-53Z"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    ports:
      - "6858:9000"
      - "6859:9001"
    volumes:
      - minio_storage:/data
    env_file:
      - docker/minio.env
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  minio-proxy:
    image: nginx:1.19.2-alpine
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./docker/minio/proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
  minio-client:
    entrypoint: "/root/.mc/initialize.sh"
    image: "minio/mc:RELEASE.2022-09-16T09-16-47Z"
    depends_on:
      minio:
        condition: service_healthy
      minio-proxy:
        condition: service_started
    env_file:
      - docker/compose.env
      - docker/minio.env
    restart: "no"
    volumes:
      - ./docker/minio/client:/root/.mc
  migrations:
    build: .
    command: bin/ensure-db
    depends_on:
      db:
        condition: service_healthy
      minio-client:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    env_file: docker/compose.env
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    restart: "no"
    volumes:
      - bundle_cache:/bundle
      - node_cache:/srv/app/node_modules
      - infra-finder-sync:/srv/app:nocopy

volumes:
  infra-finder-sync:
    external: true
  bundle_cache:
    driver: local
  minio_storage:
    driver: local
  node_cache:
    driver: local
  postgres-data:
    driver: local
  upload_storage:
    driver: local
